!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC=g++$/;"	m
CLIENT_BIN	Makefile	/^CLIENT_BIN=udpClient$/;"	m
CLIENT_OBJ	Makefile	/^CLIENT_OBJ=$(shell echo $(CLIENT_SRC) | sed 's\/\\.cpp\/\\.o\/g')$/;"	m
CLIENT_PATH	Makefile	/^CLIENT_PATH=$(ROOT_PATH)\/client$/;"	m
CLIENT_SRC	Makefile	/^CLIENT_SRC=$(shell ls $(CLIENT_PATH) | egrep -v '^.*h')$/;"	m
COMM_PATH	Makefile	/^COMM_PATH=$(ROOT_PATH)\/comm$/;"	m
DataType	Json/DataType.cpp	/^DataType::DataType(const string _name,const string _school,const string _cmd,const string _msg):$/;"	f	class:DataType
DataType	Json/DataType.h	/^class DataType{$/;"	c
GetData	pool/pool.cpp	/^void Pool::GetData(string& outmsg)$/;"	f	class:Pool
Init	client/udpClient.cpp	/^void UdpClient::Init()$/;"	f	class:UdpClient
Init	server/udpServer.cpp	/^void UdpServer::Init()$/;"	f	class:UdpServer
JsonApi	Json/JsonApi.h	/^class JsonApi{$/;"	c
LOG_PATH	Makefile	/^LOG_PATH=$(ROOT_PATH)\/log$/;"	m
POOL_PATH	Makefile	/^POOL_PATH=$(ROOT_PATH)\/pool$/;"	m
Pool	pool/pool.cpp	/^Pool::Pool()$/;"	f	class:Pool
Pool	pool/pool.h	/^class Pool{$/;"	c
PutData	pool/pool.cpp	/^void Pool::PutData(const string& inmsg)$/;"	f	class:Pool
ROOT_PATH	Makefile	/^ROOT_PATH=$(shell pwd)$/;"	m
RecvData	client/udpClient.cpp	/^int UdpClient::RecvData(std::string& outmsg)$/;"	f	class:UdpClient
RecvData	server/udpServer.cpp	/^bool UdpServer::RecvData(std::string& outmsg)$/;"	f	class:UdpServer
SERVER_BIN	Makefile	/^SERVER_BIN=udpServer$/;"	m
SERVER_OBJ	Makefile	/^SERVER_OBJ=$(shell echo $(SERVER_SRC) | sed 's\/\\.cpp\/\\.o\/g')$/;"	m
SERVER_PATH	Makefile	/^SERVER_PATH=$(ROOT_PATH)\/server$/;"	m
SERVER_SRC	Makefile	/^SERVER_SRC=$(shell ls $(SERVER_PATH) $(POOL_PATH)| egrep -v '^.*h')$/;"	m
SendData	client/udpClient.cpp	/^int UdpClient::SendData(std::string& inmsg)$/;"	f	class:UdpClient
Serialize	Json/JsonApi.cpp	/^void JsonApi::Serialize(const Json::Value root,std::string& outstr)$/;"	f	class:JsonApi
StrToValue	Json/DataType.cpp	/^void DataType::StrToValue(const std::string& str,Json::Value& out)$/;"	f	class:DataType
UdpClient	client/udpClient.cpp	/^UdpClient::UdpClient(const std::string& ip,const int& port)$/;"	f	class:UdpClient
UdpClient	client/udpClient.h	/^class UdpClient{$/;"	c
UdpServer	server/udpServer.cpp	/^UdpServer::UdpServer(const std::string ip,const int port):$/;"	f	class:UdpServer
UdpServer	server/udpServer.h	/^class UdpServer{$/;"	c
ValToString	Json/DataType.cpp	/^void DataType::ValToString(const Json::Value& val,std::string& out)$/;"	f	class:DataType
WINDOW_PATH	Makefile	/^WINDOW_PATH=$(ROOT_PATH)\/window$/;"	m
_BLANK_	pool/pool.h	9;"	d
_DATA_TYPE_H_	Json/DataType.h	2;"	d
_JSON_H__	Json/JsonApi.h	2;"	d
_POOL_H__	pool/pool.h	2;"	d
_UDP_Client_H_	client/udpClient.h	2;"	d
_UDP_SERVER_H_	server/udpServer.h	2;"	d
_blank	pool/pool.h	/^		sem_t _blank;$/;"	m	class:Pool
_cap	pool/pool.h	/^		int _cap;$/;"	m	class:Pool
_data	pool/pool.h	/^		sem_t _data;$/;"	m	class:Pool
_ip	server/udpServer.h	/^		std::string _ip;$/;"	m	class:UdpServer
_port	server/udpServer.h	/^		int _port;$/;"	m	class:UdpServer
_size	pool/pool.h	/^		int _size;$/;"	m	class:Pool
_sock	server/udpServer.h	/^		int _sock;$/;"	m	class:UdpServer
broadCast	server/udpServer.cpp	/^bool UdpServer::broadCast(std::string& outmsg)$/;"	f	class:UdpServer
cmd	Json/DataType.h	/^		std::string cmd;$/;"	m	class:DataType
consumRun	server/udpServerMain.cpp	/^static void* consumRun(void* arg)$/;"	f	file:
consumStep	pool/pool.h	/^		int consumStep;$/;"	m	class:Pool
deSerialize	Json/JsonApi.cpp	/^Json::Value JsonApi::deSerialize(const std::string str)$/;"	f	class:JsonApi
main	Json/JsonApi.cpp	/^int main()$/;"	f
main	client/udpClientMain.cpp	/^int main(int argc,char* argv[])$/;"	f
main	pool/pool.cpp	/^int main()$/;"	f
main	server/udpServerMain.cpp	/^int main(int argc,char* argv[])$/;"	f
msg	Json/DataType.h	/^		std::string msg;$/;"	m	class:DataType
name	Json/DataType.h	/^		std::string name;$/;"	m	class:DataType
peer_ip	client/udpClient.h	/^		std::string peer_ip;$/;"	m	class:UdpClient
peer_port	client/udpClient.h	/^		int peer_port;$/;"	m	class:UdpClient
peer_sock	client/udpClient.h	/^		int peer_sock;$/;"	m	class:UdpClient
pool	pool/pool.h	/^		vector<std::string> pool;$/;"	m	class:Pool
pool	server/udpServer.h	/^		Pool pool;$/;"	m	class:UdpServer
productRun	server/udpServerMain.cpp	/^static void* productRun(void* arg)$/;"	f	file:
productStep	pool/pool.h	/^		int productStep;$/;"	m	class:Pool
school	Json/DataType.h	/^		std::string school;$/;"	m	class:DataType
sendData	server/udpServer.cpp	/^int UdpServer::sendData(std::string& outmsg,struct sockaddr_in* remote,socklen_t len)$/;"	f	class:UdpServer
userlist	server/udpServer.h	/^		map<in_addr_t,struct sockaddr_in> userlist;$/;"	m	class:UdpServer
~DataType	Json/DataType.cpp	/^DataType::~DataType()$/;"	f	class:DataType
~Pool	pool/pool.cpp	/^Pool::~Pool()$/;"	f	class:Pool
~UdpClient	client/udpClient.cpp	/^UdpClient::~UdpClient()$/;"	f	class:UdpClient
~UdpServer	server/udpServer.cpp	/^UdpServer::~UdpServer()$/;"	f	class:UdpServer
